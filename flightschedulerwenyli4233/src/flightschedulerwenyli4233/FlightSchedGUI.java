package flightschedulerwenyli4233;

import java.util.*;


public class FlightSchedGUI extends javax.swing.JFrame {

    private final Database database;
    private final Booking booking;
    
    public FlightSchedGUI() {
        
        initComponents();
        bookingCustomerComboBox.setModel(new javax.swing.DefaultComboBoxModel(Database.getAllCustomers().toArray()));
        booking = new Booking();
        database = new Database();
        flightComboBox();
        newFlightComboBox();
        newDatesComboBox();
        datesComboBox();         
    }
    private void flightComboBox() {
        bookingFlightComboBox.removeAllItems();
        ArrayList<String> flightList = database.getFlightList();
        for (int i = 0; i < flightList.size(); i++){
        String new_data = flightList.get(i);
        bookingFlightComboBox.addItem(new_data);
        }
    }
    private void datesComboBox() 
    {
        bookingDayComboBox.removeAllItems();
        int i = 0;
        ArrayList dateList = database.getDatesList();
        while (i < dateList.size()){
        String temp = dateList.get(i).toString();
        bookingDayComboBox.addItem(temp);
        i++;
        
        } 
    }
     private void newFlightComboBox() {
        bookingFlightComboBox.removeAllItems();
        FlightComboBox1.removeAllItems();
        ArrayList<String> flightList = database.getFlightList();
        for (int i = 0; i < flightList.size(); i++){
            String new_data = flightList.get(i);
            //System.out.println(i +": [FLIGHTS]: adding " + temp);
            bookingFlightComboBox.addItem(new_data);
            FlightComboBox1.addItem(new_data);
        }
     }
     private void newDatesComboBox()  {
        bookingDayComboBox.removeAllItems();
        AvailDateComboBox.removeAllItems();
        int i = 0;
        ArrayList dateList = database.getDatesList();
        while (i < dateList.size()){
            String temp = dateList.get(i).toString();
            bookingDayComboBox.addItem(temp);
            AvailDateComboBox.addItem(temp);
            i++;
        }
        
    }
      private String getWaitlists(String flightID, String date){
        String x = booking.getWaitlist(flightID, date);
        return x;
    }
       private String getBooklists(String flightID, String date){
        String x = booking.getBooklist(flightID, date);
        return x;
    }
       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        customerNameTextfield = new javax.swing.JTextField();
        addCustomerButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        addCustomerResults = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        bookingCustomerComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        bookingFlightComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        bookingDayComboBox = new javax.swing.JComboBox<>();
        bookingButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookingResults = new javax.swing.JTextArea();
        CancelFlightButton = new javax.swing.JButton();
        CheckWaitListButton = new javax.swing.JButton();
        CheckStatusButton = new javax.swing.JButton();
        flightTab = new javax.swing.JPanel();
        flightIDLabel = new javax.swing.JLabel();
        flightIDataField = new javax.swing.JTextField();
        newFlightButton = new javax.swing.JButton();
        FlightComboBox1 = new javax.swing.JComboBox<>();
        droppingFlightButton = new javax.swing.JButton();
        availableFlightsLabel = new javax.swing.JLabel();
        maxSeatsLabel = new javax.swing.JLabel();
        MaximumSeatsFlightField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        flightsResults = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        DateComboBox = new javax.swing.JComboBox<>();
        yearLabel = new javax.swing.JLabel();
        YearComboBox = new javax.swing.JComboBox<>();
        AddingDateButton = new javax.swing.JButton();
        availableDatesLabel = new javax.swing.JLabel();
        AvailDateComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        MonthComboBox = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        datesResults = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        customerNamePrompt = new javax.swing.JLabel();
        customerField1 = new javax.swing.JTextField();
        customerStatusCheckButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        statusResults = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ink Free", 3, 30)); // NOI18N
        jLabel1.setText("Final Flight Scheduler ");

        jLabel2.setText("Enter Customer Name: ");

        customerNameTextfield.setColumns(20);
        customerNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTextfieldActionPerformed(evt);
            }
        });

        addCustomerButton.setText("Add Customer");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        addCustomerResults.setEditable(false);
        addCustomerResults.setColumns(20);
        addCustomerResults.setRows(5);
        jScrollPane1.setViewportView(addCustomerResults);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(customerNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(addCustomerButton)))
                        .addGap(0, 289, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(customerNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addCustomerButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Customer", jPanel1);

        jLabel3.setText("Customer: ");

        bookingCustomerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookingCustomerComboBox.setToolTipText("");
        bookingCustomerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingCustomerComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Flight: ");

        jLabel5.setText("Day: ");

        bookingButton.setText("Book Flight");
        bookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingButtonActionPerformed(evt);
            }
        });

        bookingResults.setEditable(false);
        bookingResults.setColumns(20);
        bookingResults.setRows(5);
        jScrollPane2.setViewportView(bookingResults);

        CancelFlightButton.setText("Cancel Flight / Remove From Waitlist");
        CancelFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelFlightButtonActionPerformed(evt);
            }
        });

        CheckWaitListButton.setText("Check Waitlist");
        CheckWaitListButton.setToolTipText("Checks the waitlist for the selected flight and day");
        CheckWaitListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckWaitListButtonActionPerformed(evt);
            }
        });

        CheckStatusButton.setText("Check Booklist");
        CheckStatusButton.setToolTipText("Checks for flight availability");
        CheckStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckStatusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookingCustomerComboBox, 0, 209, Short.MAX_VALUE)
                    .addComponent(bookingFlightComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookingDayComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CheckWaitListButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CheckStatusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CancelFlightButton, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addComponent(bookingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(118, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bookingCustomerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bookingFlightComboBox)
                                    .addComponent(jLabel4))
                                .addGap(37, 37, 37))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bookingDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))))
                        .addGap(48, 48, 48))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(bookingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckStatusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckWaitListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Booking", jPanel2);

        flightIDLabel.setText("Flight ID Number:");

        newFlightButton.setText("Create Flight");
        newFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFlightButtonActionPerformed(evt);
            }
        });

        droppingFlightButton.setText("Drop Flight");
        droppingFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                droppingFlightButtonActionPerformed(evt);
            }
        });

        availableFlightsLabel.setText("Available Flights:");

        maxSeatsLabel.setText("Maximum Seats:");

        flightsResults.setColumns(20);
        flightsResults.setRows(5);
        jScrollPane3.setViewportView(flightsResults);

        javax.swing.GroupLayout flightTabLayout = new javax.swing.GroupLayout(flightTab);
        flightTab.setLayout(flightTabLayout);
        flightTabLayout.setHorizontalGroup(
            flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightTabLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(flightTabLayout.createSequentialGroup()
                        .addComponent(maxSeatsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MaximumSeatsFlightField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightTabLayout.createSequentialGroup()
                        .addComponent(flightIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flightIDataField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightTabLayout.createSequentialGroup()
                        .addComponent(availableFlightsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FlightComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(droppingFlightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(117, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );
        flightTabLayout.setVerticalGroup(
            flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FlightComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(availableFlightsLabel)
                    .addComponent(droppingFlightButton))
                .addGap(26, 26, 26)
                .addGroup(flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(flightTabLayout.createSequentialGroup()
                        .addGroup(flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightIDLabel)
                            .addComponent(flightIDataField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(flightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxSeatsLabel)
                            .addComponent(MaximumSeatsFlightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(newFlightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Flights", flightTab);

        jLabel6.setText("Day:");

        yearLabel.setText("Year:");

        YearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023" }));

        AddingDateButton.setText("Add Date");
        AddingDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddingDateButtonActionPerformed(evt);
            }
        });

        availableDatesLabel.setText("Available Dates:");

        jLabel8.setText("Month:");

        MonthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        MonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthComboBoxActionPerformed(evt);
            }
        });

        datesResults.setColumns(20);
        datesResults.setRows(5);
        jScrollPane4.setViewportView(datesResults);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(availableDatesLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AvailDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(YearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(AddingDateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(195, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AvailDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(availableDatesLabel))
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(DateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearLabel)
                    .addComponent(YearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddingDateButton))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dates", jPanel3);

        customerNamePrompt.setText("Enter Customer Name:");

        customerStatusCheckButton.setText("Check Status");
        customerStatusCheckButton.setToolTipText("Checks status of scheduled flights and waitlist reservations for the customer");
        customerStatusCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerStatusCheckButtonActionPerformed(evt);
            }
        });

        statusResults.setEditable(false);
        statusResults.setColumns(20);
        statusResults.setRows(5);
        jScrollPane5.setViewportView(statusResults);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(customerNamePrompt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(customerField1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(customerStatusCheckButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNamePrompt)
                    .addComponent(customerField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(customerStatusCheckButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Customer Status", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthComboBoxActionPerformed
        // will make sure february has 28 days(:
            DateComboBox.removeAllItems();
            int month = MonthComboBox.getSelectedIndex() + 1;
            String x = "";
            System.out.println(month);

            if (month == 2)
            {
                for (int i = 0; i < 28; i++){
                    x = String.valueOf(i+1);
                    DateComboBox.addItem(x);
                    //System.out.println(x);
                }
            }
            else if (month == 1|| month == 3 || month == 5 || month == 7 ||
                month == 8 || month == 10 || month == 12){
                for (int i = 0; i < 31; i++){
                    x = String.valueOf(i+1);
                    DateComboBox.addItem(x);
                }
            }
            else {
                for (int i = 0; i < 30; i++){
                    x = String.valueOf(i+1);
                    DateComboBox.addItem(x);
                }
            }
    }//GEN-LAST:event_MonthComboBoxActionPerformed

    private void AddingDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddingDateButtonActionPerformed
        // adds a day to the system to run flights on
        String year = YearComboBox.getSelectedItem().toString();
        int rawmonth = MonthComboBox.getSelectedIndex() + 1;
        String month = String.valueOf(rawmonth);
        String day = DateComboBox.getSelectedItem().toString();

        if (month.length() < 2){
            month = "0" + String.valueOf(rawmonth);
        }
        if (day.length() < 2){
            day = "0" + day;
        }

        String date = year + "-" + month + "-" + day;
       
        booking.AddNewDate(date);
        newDatesComboBox();
        datesResults.setText("Date added to system: [" + date + "]");
    }//GEN-LAST:event_AddingDateButtonActionPerformed

    private void droppingFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_droppingFlightButtonActionPerformed
        
        String flightID = FlightComboBox1.getSelectedItem().toString();
        if(booking.ScheduledPassengers(flightID)){
            booking.Rebooking(flightID);
            database.deleteFlight(flightID);
            database.deleteDropWaitlist(flightID);
        }
        else {
            database.deleteFlight(flightID);
        }
        newFlightComboBox();
        flightsResults.setText("Flight dropped. \nWaitlisted customers have been removed from the database. \nBooked customers have been transferred.");
    }//GEN-LAST:event_droppingFlightButtonActionPerformed

    private void newFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFlightButtonActionPerformed
        
        String flightID = flightIDataField.getText();
        int maxSeats = 0;
        maxSeats = Integer.parseInt(MaximumSeatsFlightField.getText().toString());
        if ((flightID != null) && (maxSeats > 0)){
            database.addFlight(flightID, maxSeats);
            newFlightComboBox();
            flightsResults.setText("Flight added. ID [" + flightID + "] with max seats: " + maxSeats);
        }
        else {
            flightsResults.setText("Invalid Flight. A name and number of seats must be provided.");
        }
    }//GEN-LAST:event_newFlightButtonActionPerformed

    private void bookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingButtonActionPerformed
        String date = bookingDayComboBox.getSelectedItem().toString();
        String flightID = bookingFlightComboBox.getSelectedItem().toString();
        String name = bookingCustomerComboBox.getSelectedItem().toString();

        if(booking.createBooking(date,flightID, name)) {
            bookingResults.setText("You have successfully booked flight " + flightID + " on " + date + " .");
        }
        else {
            bookingResults.setText("Flight could not be booked, all seats are currently full. " + name + " has been placed on the waitlist for " + flightID + " on " + date + " .");
        }
    }//GEN-LAST:event_bookingButtonActionPerformed

    private void bookingCustomerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingCustomerComboBoxActionPerformed

    }//GEN-LAST:event_bookingCustomerComboBoxActionPerformed

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
        Database.addNewCustomer(customerNameTextfield.getText());
        addCustomerResults.setText("'" + customerNameTextfield.getText() + "' has been added to the database -- ready to be booked.");
        bookingCustomerComboBox.setModel(new javax.swing.DefaultComboBoxModel(Database.getAllCustomers().toArray()));
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void customerNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTextfieldActionPerformed

    private void customerStatusCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerStatusCheckButtonActionPerformed
        
        String name = customerField1.getText();
        String status = booking.statusDisplay(name);
        statusResults.setText(status);
    }//GEN-LAST:event_customerStatusCheckButtonActionPerformed

    private void CancelFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelFlightButtonActionPerformed
        
        String date = bookingDayComboBox.getSelectedItem().toString();
        String name = bookingCustomerComboBox.getSelectedItem().toString();
        booking.DeleteBooking(name, date);
        // something happens here: in more specific, go into the waitlist and check if any entries contain the selected 
        if(booking.checkWaitlist(name,date))
        {
            booking.DeleteFromWaitList(name,date);
        };
        bookingResults.setText("Selected record deleted.  \nPlease reference the updated booklist / waitlist status.\n");
    }//GEN-LAST:event_CancelFlightButtonActionPerformed

    private void CheckWaitListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckWaitListButtonActionPerformed
        
        String date = bookingDayComboBox.getSelectedItem().toString();
        String flightID = bookingFlightComboBox.getSelectedItem().toString();
        String waitlist_comments = getWaitlists(flightID, date);
        if(waitlist_comments.equals("")){
            bookingResults.setText("There are currently no waitlisted flights.");
        }
        else {
            bookingResults.setText( "Waitlisted flights: \n" + waitlist_comments);
        }
    }//GEN-LAST:event_CheckWaitListButtonActionPerformed

    private void CheckStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckStatusButtonActionPerformed
        String date = bookingDayComboBox.getSelectedItem().toString();
        String flightID = bookingFlightComboBox.getSelectedItem().toString();
        String booking_comments = getBooklists(flightID, date);
         if(booking_comments.equals("")){
            bookingResults.setText("There are currently no booked flights.");
        }
        else {
            bookingResults.setText( "Booked flights: \n" + booking_comments);
        }
    }//GEN-LAST:event_CheckStatusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightSchedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightSchedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightSchedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightSchedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlightSchedGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddingDateButton;
    private javax.swing.JComboBox<String> AvailDateComboBox;
    private javax.swing.JButton CancelFlightButton;
    private javax.swing.JButton CheckStatusButton;
    private javax.swing.JButton CheckWaitListButton;
    private javax.swing.JComboBox<String> DateComboBox;
    private javax.swing.JComboBox<String> FlightComboBox1;
    private javax.swing.JTextField MaximumSeatsFlightField;
    private javax.swing.JComboBox<String> MonthComboBox;
    private javax.swing.JComboBox<String> YearComboBox;
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JTextArea addCustomerResults;
    private javax.swing.JLabel availableDatesLabel;
    private javax.swing.JLabel availableFlightsLabel;
    private javax.swing.JButton bookingButton;
    private javax.swing.JComboBox<String> bookingCustomerComboBox;
    private javax.swing.JComboBox<String> bookingDayComboBox;
    private javax.swing.JComboBox<String> bookingFlightComboBox;
    private javax.swing.JTextArea bookingResults;
    private javax.swing.JTextField customerField1;
    private javax.swing.JLabel customerNamePrompt;
    private javax.swing.JTextField customerNameTextfield;
    private javax.swing.JButton customerStatusCheckButton;
    private javax.swing.JTextArea datesResults;
    private javax.swing.JButton droppingFlightButton;
    private javax.swing.JLabel flightIDLabel;
    private javax.swing.JTextField flightIDataField;
    private javax.swing.JPanel flightTab;
    private javax.swing.JTextArea flightsResults;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel maxSeatsLabel;
    private javax.swing.JButton newFlightButton;
    private javax.swing.JTextArea statusResults;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
